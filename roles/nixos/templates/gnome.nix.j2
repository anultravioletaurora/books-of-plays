{ config, pkgs, ...}: {
    # Enable the X11 windowing system.
    services.xserver.enable = true;

    # Enable the GNOME Desktop Environment.
    services.xserver.displayManager.gdm.enable = {{ (deck.enabled is false and desktop.enabled is true) | lower }};
    services.xserver.desktopManager.gnome.enable = true;
    
    services.gnome.gnome-remote-desktop.enable = {{ (deck.enabled is false and desktop.enabled is true) | lower }};

    # Configure keymap in X11
    services.xserver = {
        xkb = {
            layout = "us";
            variant = "";
        };
    };

    # Enable CUPS to print documents.
    services.printing.enable = true;

    # Enable sound with pipewire.
    sound.enable = true;
    hardware.pulseaudio.enable = false;
    security.rtkit.enable = true;
    services.pipewire = {
        enable = {{ (deck.enabled is false and desktop.enabled is true) | lower }};
        alsa.enable = {{ (deck.enabled is false and desktop.enabled is true) | lower }};
        alsa.support32Bit = {{ (deck.enabled is false and desktop.enabled is true) | lower }};
        pulse.enable = {{ (deck.enabled is false and desktop.enabled is true) | lower }};
        # If you want to use JACK applications, uncomment this
        #jack.enable = true;

        # use the example session manager (no others are packaged yet so this is enabled by default,
        # no need to redefine it in your config for now)
        #media-session.enable = true;
    };

    # Enable touchpad support (enabled default in most desktopManager).
    # services.xserver.libinput.enable = true;

    # Enable automatic login for the user.
    services.xserver.displayManager.autoLogin = {
        enable = {{ (deck.enabled is false and desktop.enabled is true) | lower }};
        user = "violet";
    };

    # Workaround for GNOME autologin: https://github.com/NixOS/nixpkgs/issues/10>
    systemd.services."getty@tty1".enable = false;
    systemd.services."autovt@tty1".enable = false;

    environment.systemPackages = with pkgs; [ 
        gnomeExtensions.appindicator 
        gnomeExtensions.compiz-windows-effect
        gnomeExtensions.dash-to-dock
    ];

    services.udev.packages = with pkgs; [ 
        gnome.gnome-settings-daemon 
    ];

    users.users.violet = {
        isNormalUser = true;
        description = "Violet Rose Caulfield";
        extraGroups = [ "networkmanager" "wheel" ];
        packages = with pkgs; [
            gnome.gnome-tweaks
            gnome-extension-manager
        ];
    };
}